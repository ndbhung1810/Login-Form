{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\react\\\\react_login_form\\\\src\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from './api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst REGISTER_URL = '/register';\n\nconst Register = () => {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setValidName(USER_REGEX.test(user));\n  }, [user]);\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if button enabled with JS hack\n\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        user,\n        pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      }); // TODO: remove console.logs before deployment\n\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data)); //console.log(JSON.stringify(response))\n\n      setSuccess(true); //clear state and controlled inputs\n\n      setUser('');\n      setPwd('');\n      setMatchPwd('');\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validName ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validName || !user ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          value: user,\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 48\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 54\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPwd ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPwd || !pwd ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 48\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 108\n          }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 57\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 102\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 140\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 176\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 216\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validMatch && matchPwd ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validMatch || !matchPwd ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          value: matchPwd,\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Register, \"K2L7L9cVkNc42S3paB9KBpe33pw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/react/react_login_form/src/Register.js"],"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","USER_REGEX","PWD_REGEX","REGISTER_URL","Register","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","test","handleSubmit","e","preventDefault","v1","v2","response","post","JSON","stringify","headers","withCredentials","console","log","data","err","status","target","value"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from './api/axios';\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = '/register';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(user));\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(pwd));\r\n        setValidMatch(pwd === matchPwd);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n        if (!v1 || !v2) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ user, pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            // TODO: remove console.logs before deployment\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            //clear state and controlled inputs\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        <a href=\"#\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validName || !user ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={user}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\"\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens allowed.\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            8 to 24 characters.<br />\r\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            value={matchPwd}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            {/*put router link here*/}\r\n                            <a href=\"#\">Sign In</a>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}